/********************************************************************** Software License Agreement (BSD License)**  Copyright (c) 2008, University of Illinois at Urbana-Champaign*  All rights reserved.**  Redistribution and use in source and binary forms, with or without*  modification, are permitted provided that the following conditions*  are met:**   * Redistributions of source code must retain the above copyright*     notice, this list of conditions and the following disclaimer.*   * Redistributions in binary form must reproduce the above*     copyright notice, this list of conditions and the following*     disclaimer in the documentation and/or other materials provided*     with the distribution.*   * Neither the name of the University of Illinois nor the names of its*     contributors may be used to endorse or promote products derived*     from this software without specific prior written permission.**  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS*  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT*  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS*  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE*  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,*  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,*  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;*  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER*  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT*  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN*  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE*  POSSIBILITY OF SUCH DAMAGE.*********************************************************************//***** Author: Alexander Sorokin, Department of Computer Science,*                                  University of Illinois at Urbana-Champaign.* Advised by: David Forsyth.*****/package vision{	import flash.display.*;	import fl.controls.CheckBox;	import fl.controls.List;	import fl.controls.ComboBox;	import fl.controls.Button;	import fl.data.DataProvider;	//import flash.display.Shape;	import fl.controls.Label;	import flash.events.MouseEvent;	import flash.events.Event;	import flash.xml.XMLDocument;	import flash.xml.XMLNode;	import flash.text.*;	import flash.net.*;	import flash.utils.Timer;    import flash.events.TimerEvent;    import flash.events.Event;		import vision.BBoxInputToken;	import vision.BBox2InputToken;	import vision.PolygonalDisplay;	import vision.MarkSymbol2;	import vision.TwoLevelInputToken;	import vision.ColorManager;	//import vision.CheckBox2;	import vision.BBoxInput;	import vision.Person14Joints;	import flash.xml.XMLDocument;	import vision.InputSpecsControl;	import fl.controls.List;		dynamic public class ImageAnnotationAdmin extends MovieClip	{						var image_base="../";		var image_URL;		var assignmentID:String;				var annotationID:String="";						var the_video:String;		var the_frame:String;		var the_target_object:String;		var grid_source:String;						var the_image;		var all_sites:Array= new Array();		var all_shapes:Array= new Array();				var activeShape=void;		var active_marker=null;		var last_object_id:Number=0;				public var opMode;		var hit_id;				public var color_manager:vision.ColorManager;				var now:Date;		var loadTime;								var targetX=500;		var targetY=500;		var originalW=-1;		var originalH=-1;		var ratio;		var oX;		var oY;						var all_data_;				function ImageAnnotationAdmin() {			now= new Date();			loadTime = now.getTime();						color_manager=new vision.ColorManager();			m_detail_ctl.set_root(this);						m_detail_ctl.visible=false;							all_data_="";					}				function loaded(event:Event):void		{			var content = event.target.content;					originalW=content.width;			originalH=content.height;			var rW=content.width/targetX;			var rH=content.height/targetY;			ratio= Math.max(rW,rH);			//txtShapeLabel.text= ratio;			//txtShapeLabel.visible=false;			content.width = content.width/ratio;//the_sites_holder.width;			content.height = content.height/ratio;//the_sites_holder.height;			oX=(targetX-content.width)/2;			oY=(targetY-content.height)/2;			content.x = oX;			content.y = oY;			the_image=content;					//this.the_sites_holder.bg_image=the_image;			this.the_sites_holder.setBG(the_image);			//build_regular_grid_sites();		}		//function loaded(event:Event):void		//{		//    var content = event.target.content;		//		//	var rW=content.width/480;		//	var rH=content.height/320;		//	var ratio= Math.max(rW,rH);		//	//txtShapeLabel.text= ratio;		//	//txtShapeLabel.visible=false;		//	content.width = content.width/ratio;//the_sites_holder.width;		//    content.height = content.height/ratio;//the_sites_holder.height;		//    content.x = (480-content.width)/2;		//    content.y = (320-content.height)/2;		//	the_image=content;		//	//build_regular_grid_sites();		//}				//var m_btn_add_mode:Button;		//var m_btn_view_mode:Button;		/*m_btn_add_mode.addEventListener(MouseEvent.CLICK, switch_mode_ADD);		function switch_mode_ADD(event:Event):void		{			m_btn_add_mode.emphasized=true;			m_btn_view_mode.emphasized=false;			m_objects_view.visible=false;			m_input_specs.visible=true;		}*/		/*		switch_mode_ADD(null);				m_btn_view_mode.addEventListener(MouseEvent.CLICK, switch_mode_VIEW);		function switch_mode_VIEW(event:Event):void		{			m_btn_add_mode.emphasized=false;			m_btn_view_mode.emphasized=true;			m_objects_view.visible=true;			m_input_specs.visible=false;			}*/												var pictLdr:Loader;					function set_background_image(image_name:String,bAddExtraHandler:Boolean=false):void		{			//image_name="file:///Users/syrnick/projects/research_uiuc/data/activity/youtube/frames/youtube_AaO1aLwk53Y/001001.jpg"			pictLdr=new Loader();						var pictURL:String = image_name;			var pictURLReq:URLRequest = new URLRequest(pictURL);			the_sites_holder.addChild(pictLdr);									if(all_shapes.length==0)			{							}						pictLdr.contentLoaderInfo.addEventListener(Event.COMPLETE, loaded);			if(bAddExtraHandler){				pictLdr.contentLoaderInfo.addEventListener(Event.COMPLETE, on_task_loaded);			}			pictLdr.load(pictURLReq);				}						function on_license_loaded(event:Event):void		{			var loader:URLLoader = URLLoader(event.target);			//trace("completeHandler: " + loader.data);			var t:String=loader.data;			var short=t.replace("http://creativecommons.org/licenses/","");			imageLicense.htmlText="<a href='"+loader.data+"' target='_blank'>"+short+"(more)</a>";		}				var licLoader:flash.net.URLLoader;				function load_license(url:String):void		{						licLoader=new URLLoader();									var req:URLRequest = new URLRequest(url);			licLoader.addEventListener(Event.COMPLETE, on_license_loaded);			licLoader.load(req);		}				function on_source_loaded(event:Event):void		{			var loader:URLLoader = URLLoader(event.target);			//trace("completeHandler: " + loader.data);			imageOrigin.text=loader.data;		}				var srcLoader:URLLoader;				function load_origin(url:String):void		{						srcLoader=new URLLoader();									var req:URLRequest = new URLRequest(url);			srcLoader.addEventListener(Event.COMPLETE, on_source_loaded);			srcLoader.load(req);		}												var nOutstandingTasks:Number=0;		var taskLoader:URLLoader=null;		var annotationLoader:URLLoader=null;						function on_task_loaded(event:Event):void		{			//trace("completeHandler: " + loader.data);					nOutstandingTasks=nOutstandingTasks-1;			if (nOutstandingTasks>0){				return;			}						var task_definition:XML=new XML(taskLoader.data);						if(annotationLoader != null){				var annotation:XML=new XML(annotationLoader.data);				m_input_specs.read_task_w_annotation(task_definition,task_definition,annotation.annotation[0],this);				if(opMode=="debug_edit"||opMode=="edit"){					m_input_specs.enable_edit();				}				the_sites_holder.orderElementsByVisibility();			}else{				m_input_specs.read_task(task_definition,task_definition,this);					}			//bTaskLoaded=true;		}				//var bTaskLoaded:Boolean=false;				function load_task(url:String):void		{			this.nOutstandingTasks=this.nOutstandingTasks+1;			taskLoader=new URLLoader();									var req:URLRequest = new URLRequest(url);			taskLoader.addEventListener(Event.COMPLETE, on_task_loaded);			taskLoader.load(req);		}								function load_annotation(task_URL:String,annotation_URL:String)		{						load_task(task_URL);						annotationLoader=new URLLoader();							var req:URLRequest = new URLRequest(annotation_URL);			annotationLoader.addEventListener(Event.COMPLETE, on_task_loaded);			annotationLoader.load(req);			}						var save_timer;				public function collect_site_labels(compression):String		{			var minTime=0;			var maxTime=0;			var del1=",";			var del2=";";			var idxS;			var labels="";					m_input_specs.addEventListener("my_all_data_saved", completeHandler);			var results_data=m_input_specs.collect_results();						var now:Date = new Date();			var submitTime=now.getTime();					var results_xml="<results>\n"+results_data+"\n"+				'<meta load_time="'+this.loadTime.toString()+'" submit_time="'+submitTime.toString() +'"/></results>';						this.all_data_=results_xml;			save_timer=new Timer(1000,1);			save_timer.addEventListener(TimerEvent.TIMER_COMPLETE, completeHandler);			save_timer.start();			//this.addChild(save_timer);						return results_xml;		}		  private function completeHandler(e:Event):void {			var data_ready_evt:Event = new Event("my_all_data_saved");			this.dispatchEvent(data_ready_evt);        }		public function get_all_data():String		{			return this.all_data_;		}		public function parseParameters():void		{			var keyStr:String;			var valueStr:String;			//var image_base="http://s3.amazonaws.com/visual-hits/frames/";			var target_URL;			var task_URL;			var annotation_URL;					var data_host;			var data_unit;					var task_name;			//return;			var paramObj:Object = LoaderInfo(this.root.loaderInfo).parameters;			if("mode" in paramObj){				opMode=paramObj["mode"];									}else{				opMode="debug";			}									if(opMode=="debug")			{				image_base="http://127.0.0.1:8080/";				//image_base="http://vision-app1.cs.uiuc.edu:8080/";				assignmentID="XASSIGNMENT_ID_NOT_AVAILABLE";								the_video="VOC2008";				the_frame="2007_004538"				//task_name="voc2008";				task_name="demo_segmentation";								//the_video="LabelMe";				//the_frame="05june05_static_street_boston/p1010736"				//task_name="labelme_box";				image_URL=image_base+"frames/"+the_video+"/"+the_frame+".jpg";				image_URL=image_base+"datastore/wnd2/VOC2008/2007_004538.jpg/1,1,500,500/";				task_URL=image_base+"tasks/"+task_name+".xml"								//opMode="debug_display";				//opMode="debug_edit";				//annotationID="demo_annotation_labelme";				//annotationID="demo_annotation_voc08_2";				//annotation_URL=image_base+"annotations/"+annotationID+".xml"						}else if(opMode=="demo_local"){				the_video="youtube_j7GsuTqC_Sw";				the_frame="000906";				the_target_object="002";						assignmentID="XASSIGNMENT_ID_NOT_AVAILABLE";				image_base="file:///Users/syrnick/projects/research_uiuc/data/activity/youtube/"				image_URL=image_base+"frames/"+the_video+"/"+the_frame+".jpg";			}else if(opMode=="demo"){								if ("img_base" in paramObj){					image_base=paramObj["img_base"];				}else{					image_base="http://vision-app1.cs.uiuc.edu:8080/";				}								the_video=paramObj["video"];				the_frame=paramObj["frame"];				image_URL=image_base+"frames/"+the_video+"/"+the_frame+".jpg";				task_name=paramObj["task"];								//image_base="file:///Users/syrnick/projects/research_uiuc/data/activity/youtube/"				image_URL=image_base+"frames/"+the_video+"/"+the_frame+".jpg";				task_URL=image_base+"tasks/"+task_name+".xml";									assignmentID=paramObj["assignmentId"];									}else if(opMode=="demo2"){				data_host=paramObj["data_host"];				data_unit=paramObj["data_unit"];						assignmentID=paramObj["assignmentId"];				//grid_source=paramObj["grid_source"];				//image_URL=image_base+the_video+"/"+the_frame+".jpg";				image_URL=""+data_host+""+data_unit;			}else if(opMode=="MT2" || opMode=="sandbox" || opMode=="sandbox2"){				if ("data_unit" in paramObj){ 					data_host=paramObj["data_host"];					data_unit=paramObj["data_unit"];					image_URL=""+data_host+""+data_unit;						}else{					if ("img_base" in paramObj){						image_base=paramObj["img_base"];					}else{						image_base="http://vision-app1.cs.uiuc.edu:8080/";					}					the_video=paramObj["video"];					the_frame=paramObj["frame"];					image_URL=image_base+"frames/"+the_video+"/"+the_frame+".jpg";					task_name=paramObj["task"];										//image_base="file:///Users/syrnick/projects/research_uiuc/data/activity/youtube/"					image_URL=image_base+"frames/"+the_video+"/"+the_frame+".jpg";					task_URL=image_base+"tasks/"+task_name+".xml"									}						//hit_id=paramObj["extid"]				assignmentID=paramObj["assignmentId"];					}else if(opMode=="local_annotation"){				if ("img_base" in paramObj){						image_base=paramObj["img_base"];					}else{						image_base="http://vision-app1.cs.uiuc.edu:8080/";					}				if ("imgURL" in paramObj){					image_URL=paramObj["imgURL"];				}else{					the_video=paramObj["video"];					the_frame=paramObj["frame"];					image_URL=image_base+"frames/"+the_video+"/"+the_frame+".jpg";										//image_base="file:///Users/syrnick/projects/research_uiuc/data/activity/youtube/"					image_URL=image_base+"frames/"+the_video+"/"+the_frame+".jpg";				}				task_name=paramObj["task"];				task_URL=image_base+"tasks/"+task_name+".xml"						//hit_id=paramObj["extid"]				assignmentID="ignore" //paramObj["assignmentId"];							}else if(opMode=="AmazonMTproduction" || opMode=="AmazonMTsandbox" ){				if ("data_unit" in paramObj){ 					data_host=paramObj["data_host"];					data_unit=paramObj["data_unit"];					image_URL=""+data_host+""+data_unit;						}else{					if ("img_base" in paramObj){						image_base=paramObj["img_base"];					}else{						image_base="http://vision-app1.cs.uiuc.edu:8080/";					}					the_video=paramObj["video"];					image_URL=image_base+"frames/"+the_video+"/"+the_frame+".jpg";					task_name=paramObj["task"];										//image_base="file:///Users/syrnick/projects/research_uiuc/data/activity/youtube/"					if("image_url" in paramObj)					{						image_URL=paramObj["image_url"];					}else{						the_frame=paramObj["frame"];						image_URL=image_base+"frames/"+the_video+"/"+the_frame+".jpg";					}					task_URL=image_base+"tasks/"+task_name+".xml"									}						assignmentID=paramObj["assignmentId"];							}else if(opMode=="display"  ){				if ("img_base" in paramObj){					image_base=paramObj["img_base"];				}else{					image_base="http://vision-app1.cs.uiuc.edu:8080/";				}								the_video=paramObj["video"];				//image_URL=image_base+"frames/"+the_video+"/"+the_frame+".jpg";				task_name=paramObj["task"];								if("image_url" in paramObj)				{					image_URL=paramObj["image_url"];				}else{					the_frame=paramObj["frame"];					image_URL=image_base+"frames/"+the_video+"/"+the_frame+".jpg";				}								task_URL=image_base+"tasks/"+task_name+".xml"								if( "annotationURL" in paramObj ){					annotation_URL=paramObj["annotationURL"];				}else{					annotationID=paramObj["annotationID"];					annotation_URL=image_base+"annotations/"+annotationID+".xml"				}			}else if(opMode=="display2"  ){				if ("img_base" in paramObj){					image_base=paramObj["img_base"];				}else{					image_base="http://vision-app1.cs.uiuc.edu:8080/";				}								the_video=paramObj["video"];				the_frame=paramObj["frame"];				image_URL=image_base+"frames/"+the_video+"/"+the_frame+".jpg";				task_name=paramObj["task"];								//image_base="file:///Users/syrnick/projects/research_uiuc/data/activity/youtube/"				image_URL=image_base+"frames/"+the_video+"/"+the_frame+".jpg";				task_URL=image_base+"tasks/"+task_name+".xml"								annotation_URL=image_base+paramObj["annotationURL"];				//annotation_URL=image_base+"annotations/"+annotationID+".xml"					}else if(opMode=="edit"  ){				if ("img_base" in paramObj){					image_base=paramObj["img_base"];				}else{					image_base="http://vision-app1.cs.uiuc.edu:8080/";				}								if ("imgURL" in paramObj){					image_URL=paramObj["imgURL"];				}else{					the_video=paramObj["video"];					the_frame=paramObj["frame"];					image_URL=image_base+"frames/"+the_video+"/"+the_frame+".jpg";				}								task_name=paramObj["task"];				task_URL=image_base+"tasks/"+task_name+".xml"								if( "annotationID" in paramObj){					annotationID=paramObj["annotationID"];					annotation_URL=image_base+"annotations/"+annotationID+".xml"				}else{					annotation_URL=image_base+paramObj["annotationURL"];				}//annotation_URL=image_base+"annotations/"+annotationID+".xml"					}else{						//the_frame="001121";			//the_target_object="001";			//assignmentID="ASSIGNMENT_ID_NOT_AVAILABLE";			//the_video="youtube_AaO1aLwk53Y";			the_video=paramObj["video"];			the_frame=paramObj["frame"];			//the_target_object=paramObj["target_object"];			assignmentID=paramObj["assignmentId"];			//grid_source=paramObj["grid_source"];			image_URL=image_base+"frames/"+the_video+"/"+the_frame+".jpg";			task_name=paramObj["task"];					task_URL=image_base+"tasks/"+task_name+".xml"					//target_URL=image_base+the_video+"_target_"+the_target_object+".jpg";					//grid_source=image_base+"initial/"+the_video+"_"+the_frame+".initial.sites.txt";					//"file:///Users/syrnick/projects/visual_turk/variable_site_configuration/initial.sites.txt";			}						//var request:URLRequest = new URLRequest(grid_source);			//var loader:URLLoader = new URLLoader();			//loader.addEventListener(Event.COMPLETE,grid_load_completeHandler);			//loader.load(request);					//for (keyStr in paramObj) {			//        valueStr = String(paramObj[keyStr]);			//}					//set_target_image(target_URL);											//markDotContainer.load_from_url_simple(image_base+"mt/hit_data/"+hit_id+"/");					//load_origin(image_base+"frames/metadata/"+the_video+".attribution");			//load_license(image_base+"frames/metadata/"+the_video+".license");					if(opMode=="display"  || opMode=="display2"  || opMode=="debug_display" ){				this.nOutstandingTasks=this.nOutstandingTasks+2;				load_annotation(task_URL,annotation_URL);				set_background_image(image_URL,true);			}else if(opMode=="debug_edit" || opMode=="edit" ){				this.nOutstandingTasks=this.nOutstandingTasks+2;				load_annotation(task_URL,annotation_URL);				set_background_image(image_URL,true);			}else{				set_background_image(image_URL);				load_task(task_URL);			}		}			}}